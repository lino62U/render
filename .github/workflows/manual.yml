name: Automated Workflow

on:
  issues:
    types:
      - opened

jobs:
  move-to-ready:
    runs-on: ${{ matrix.os }}
    env:
      PROJECT_ID: 6 # Reemplaza con el ID real de tu proyecto
    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Move Issue to Ready Column
        run: |
          # Obtener el token de GitHub
          Write-Host "GITHUB_TOKEN: $env:GITHUB_TOKEN"
          
          # Obtener el ID del proyecto
          Write-Host "PROJECT_ID: $env:PROJECT_ID"
          
          # Obtener el ID de la tarjeta
          $CARD_ID = (Invoke-RestMethod -Headers @{Authorization="Bearer $env:GITHUB_TOKEN"} -Uri "https://api.github.com/repos/${env:GITHUB_REPOSITORY}/issues/${{ github.event.issue.number }}/cards").id

          Write-Host "CARD_ID: $CARD_ID"
          
          # Listar proyectos usando la API REST de GitHub
          $PROJECTS = Invoke-RestMethod -Headers @{Authorization="Bearer $env:GITHUB_TOKEN"} -Uri "https://api.github.com/repos/${env:GITHUB_REPOSITORY}/projects"
          
          # Extraer el ID de la columna 'Ready'
          $READY_COLUMN_ID = ($PROJECTS | Where-Object { $_.name -eq "Ready" }).columns.id
          
          Write-Host "READY_COLUMN_ID: $READY_COLUMN_ID"

          # Mover la tarjeta a la columna 'Ready'
          $BODY = @{
              position = "top"
              column_id = $READY_COLUMN_ID
          } | ConvertTo-Json

          Invoke-RestMethod -Method Post -Uri "https://api.github.com/projects/columns/cards/$CARD_ID/moves" -Headers @{Authorization="Bearer $env:GITHUB_TOKEN"; Accept="application/vnd.github.inertia-preview+json"} -Body $BODY
