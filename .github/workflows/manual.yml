name: Automated Workflow

on:
  issues:
    types:
      - starred

jobs:
  move-to-ready:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Move Issue to Ready Column
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: projectColumns } = await github.projects.listColumns({ project_id: PROJECT_ID });
            const readyColumn = projectColumns.find(column => column.name === 'Ready');
            
            await github.projects.moveCard({
              card_id: context.payload.issue.card_id,
              position: 'top',
              column_id: readyColumn.id,
            });

  create-branch-and-move-to-progress:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Create Branch and Move to In Progress
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = `feature/${context.payload.issue.number}`;
            
            // Crear la rama
            await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${branchName}`,
              sha: context.payload.issue.sha,
            });

            // Mover el issue a la columna "In Progress"
            const { data: projectColumns } = await github.projects.listColumns({ project_id: PROJECT_ID });
            const inProgressColumn = projectColumns.find(column => column.name === 'In Progress');
            
            await github.projects.moveCard({
              card_id: context.payload.issue.card_id,
              position: 'top',
              column_id: inProgressColumn.id,
            });

  create-pr-and-move-to-review:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Create Pull Request and Move to In Review
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branchName = `feature/${context.payload.issue.number}`;
            
            // Crear el pull request
            const { data: pullRequest } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Feature ${context.payload.issue.number}`,
              head: branchName,
              base: 'dev',
            });

            // Mover el issue a la columna "In Review"
            const { data: projectColumns } = await github.projects.listColumns({ project_id: PROJECT_ID });
            const inReviewColumn = projectColumns.find(column => column.name === 'In Review');
            
            await github.projects.moveCard({
              card_id: context.payload.issue.card_id,
              position: 'top',
              column_id: inReviewColumn.id,
            });
